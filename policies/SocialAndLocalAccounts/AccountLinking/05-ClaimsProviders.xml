<?xml version="1.0" encoding="utf-8" ?>
<TrustFrameworkPolicy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" PolicySchemaVersion="0.3.0.0" TenantId="{Settings:Tenant}" PolicyId="B2C_1A_AcctLink_ClaimsProviders" PublicPolicyUri="http://{Settings:Tenant}/B2C_1A_AcctLink_ClaimsProviders">

    <BasePolicy>
        <TenantId>{Settings:Tenant}</TenantId>
        <PolicyId>B2C_1A_AcctLink_BuildingBlocks</PolicyId>
    </BasePolicy>


    <ClaimsProviders>
        <ClaimsProvider>
            <DisplayName>Azure Active Directory</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="AAD-UserReadUsingUserIdentityToLink-NoError">
                    <Metadata>
                        <Item Key="api-version">1.6</Item>
                        <Item Key="Operation">Read</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="userIdentities" PartnerClaimType="userIdentities" Required="true" />
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectIdToLink" PartnerClaimType="objectId" />
                    </OutputClaims>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common" />
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserReadUsingUserIdentity">
                    <Metadata>
                        <Item Key="api-version">1.6</Item>
                        <Item Key="Operation">Read</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
                        <Item Key="UserMessageIfClaimsPrincipalDoesNotExist">User does not exist. Please sign up before you can sign in.</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="userIdentities" PartnerClaimType="userIdentities" Required="true" />
                    </InputClaims>
                    <OutputClaims>
                        <!-- Required claims -->
                        <OutputClaim ClaimTypeReferenceId="objectId" />
                        <OutputClaim ClaimTypeReferenceId="userIdentities" />

                        <!-- Optional claims -->
                        <OutputClaim ClaimTypeReferenceId="displayName" />
                        <OutputClaim ClaimTypeReferenceId="otherMails" />
                        <OutputClaim ClaimTypeReferenceId="givenName" />
                        <OutputClaim ClaimTypeReferenceId="surname" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <!-- Sample: Get the list of issuers user has registered -->
                        <OutputClaimsTransformation ReferenceId="ExtractIssuers" />

                        <!-- Sample: Remote the current issuer name, so the user will not be able to remove the IDP has sign-in with -->
                        <OutputClaimsTransformation ReferenceId="RemoveUserIdentityFromCollectionByIssuerToUnlink" />

                        <!-- Sample: Get the list of issuers user has registered used to show the unlink technical profiles -->
                        <OutputClaimsTransformation ReferenceId="ExtractIssuersToUnlink" />
                    </OutputClaimsTransformations>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common" />
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserReadUsingUserIdentity-NoError">
                    <Metadata>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">false</Item>
                    </Metadata>
                    <IncludeTechnicalProfile ReferenceId="AAD-UserReadUsingUserIdentity" />
                </TechnicalProfile>

                <TechnicalProfile Id="AAD-UserWriteUsingUserIdentity">
                    <Metadata>
                        <Item Key="api-version">1.6</Item>
                        <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">true</Item>
                        <Item Key="UserMessageIfClaimsPrincipalAlreadyExists">You are already registered, please press the back button and sign in instead.</Item>
                    </Metadata>
                    <InputClaimsTransformations>
                        <InputClaimsTransformation ReferenceId="CreateOtherMailsFromEmail"/>
                    </InputClaimsTransformations>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="userIdentities" PartnerClaimType="userIdentities" Required="true"/>
                    </InputClaims>
                    <PersistedClaims>
                        <!-- Required claims -->
                        <PersistedClaim ClaimTypeReferenceId="userIdentities"/>
                        <PersistedClaim ClaimTypeReferenceId="userPrincipalName"/>
                        <PersistedClaim ClaimTypeReferenceId="mailNickName" DefaultValue="unknown"/>
                        <PersistedClaim ClaimTypeReferenceId="displayName" DefaultValue="unknown"/>

                        <!-- Optional claims -->
                        <PersistedClaim ClaimTypeReferenceId="otherMails"/>
                        <PersistedClaim ClaimTypeReferenceId="givenName"/>
                        <PersistedClaim ClaimTypeReferenceId="surname"/>
                    </PersistedClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="userIdentities"/>
                        <OutputClaim ClaimTypeReferenceId="newUser" PartnerClaimType="newClaimsPrincipalCreated"/>
                        <!-- The following other mails claim is needed for the case when a user is created, we get otherMails from directory. Self-asserted provider also has an
                 OutputClaims, and if this is absent, Self-Asserted provider will prompt the user for otherMails. -->
                        <OutputClaim ClaimTypeReferenceId="otherMails"/>
                    </OutputClaims>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common"/>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-AAD"/>
                </TechnicalProfile>

                <!--Sample: Update the userIdentities to add or remove user identity -->
                <TechnicalProfile Id="AAD-UserUpdateWithUserIdentities">
                    <Metadata>
                        <Item Key="api-version">1.6</Item>
                        <Item Key="Operation">Write</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalAlreadyExists">false</Item>
                        <Item Key="RaiseErrorIfClaimsPrincipalDoesNotExist">true</Item>
                    </Metadata>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="objectId" Required="true" />
                    </InputClaims>
                    <PersistedClaims>
                        <PersistedClaim ClaimTypeReferenceId="objectId" />
                        <PersistedClaim ClaimTypeReferenceId="userIdentities" />
                    </PersistedClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="objectId" />
                        <OutputClaim ClaimTypeReferenceId="userIdentities" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="ExtractIssuers" />
                    </OutputClaimsTransformations>
                    <IncludeTechnicalProfile ReferenceId="AAD-Common" />
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                </TechnicalProfile>

                <!--Sample: Reads local accoutn's  userIdentities attribute to userIdentities claim-->
                <TechnicalProfile Id="AAD-UserReadUsingObjectId">
                    <Metadata>
                        <Item Key="api-version">1.6</Item>
                    </Metadata>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="userIdentities" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <!-- Sample: Get the list of issuers user has registered -->
                        <OutputClaimsTransformation ReferenceId="ExtractIssuers" />
                        <!-- Sample: Get the list of issuers user has registered used to show the unlink technical profiles -->
                        <OutputClaimsTransformation ReferenceId="ExtractIssuersToUnlinkForLocalAccount" />
                    </OutputClaimsTransformations>
                </TechnicalProfile>

            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Self Asserted</DisplayName>
            <TechnicalProfiles>
                <!-- Demo: Show error message if user exists-->
                <TechnicalProfile Id="SelfAsserted-Error">
                    <DisplayName>Unsolicited error message</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
                        <!-- Sample: Remove the continue button-->
                        <Item Key="setting.showContinueButton">false</Item>
                    </Metadata>
                    <InputClaimsTransformations>
                        <InputClaimsTransformation ReferenceId="CreateUserExistsErrorMessage" />
                    </InputClaimsTransformations>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="errorMessage"/>
                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="errorMessage"/>
                    </OutputClaims>
                </TechnicalProfile>

                <TechnicalProfile Id="SelfAsserted-Social-v2">
                    <DisplayName>User ID signup</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer"/>
                    </CryptographicKeys>
                    <InputClaims>
                        <!-- These claims ensure that any values retrieved in the previous steps (e.g. from an external IDP) are prefilled. 
                 Note that some of these claims may not have any value, for example, if the external IDP did not provide any of
                 these values, or if the claim did not appear in the OutputClaims section of the IDP.
                 In addition, if a claim is not in the InputClaims section, but it is in the OutputClaims section, then its
                 value will not be prefilled, but the user will still be prompted for it (with an empty value). -->
                        <InputClaim ClaimTypeReferenceId="displayName"/>
                        <InputClaim ClaimTypeReferenceId="givenName"/>
                        <InputClaim ClaimTypeReferenceId="surname"/>
                    </InputClaims>
                    <OutputClaims>
                        <!-- These claims are not shown to the user because their value is obtained through the "ValidationTechnicalProfiles"
                 referenced below, or a default value is assigned to the claim. A claim is only shown to the user to provide a 
                 value if its value cannot be obtained through any other means. -->
                        <OutputClaim ClaimTypeReferenceId="objectId"/>
                        <OutputClaim ClaimTypeReferenceId="newUser"/>
                        <OutputClaim ClaimTypeReferenceId="executed-SelfAsserted-Input" DefaultValue="true"/>

                        <!-- Optional claims. These claims are collected from the user and can be modified. If a claim is to be persisted in the directory after having been 
                 collected from the user, it needs to be added as a PersistedClaim in the ValidationTechnicalProfile referenced below, i.e. 
                 in AAD-UserWriteUsingAlternativeSecurityId. -->
                        <OutputClaim ClaimTypeReferenceId="displayName"/>
                        <OutputClaim ClaimTypeReferenceId="givenName"/>
                        <OutputClaim ClaimTypeReferenceId="surname"/>
                    </OutputClaims>
                    <ValidationTechnicalProfiles>
                        <ValidationTechnicalProfile ReferenceId="AAD-UserWriteUsingUserIdentity"/>
                    </ValidationTechnicalProfiles>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialSignup"/>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Social Accounts</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="SocialAccount-Unlink">
                    <DisplayName>Unlink Microsoft</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ClaimTypeOnWhichToEnable">issuersToUnlink</Item>
                    </Metadata>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerToUnlink" DefaultValue="" AlwaysUseDefaultValue="true" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="RemoveUserIdentityFromCollectionByIssuer" />
                    </OutputClaimsTransformations>
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                    <EnabledForUserJourneys>OnItemExistenceInStringCollectionClaim</EnabledForUserJourneys>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>


        <ClaimsProvider>
            <Domain>microsoftonline.com</Domain>
            <DisplayName>Common AAD</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="AADCommon-OIDC-Base">
                    <DisplayName>Microsoft AAD Login</DisplayName>
                    <Description>Login with your Contoso account</Description>
                    <Protocol Name="OpenIdConnect"/>
                    <Metadata>
                        <Item Key="METADATA">https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration</Item>
                        <!-- Update the Client ID below to the Application ID -->
                        <Item Key="client_id">9bb42244-a0ca-499f-afe0-1428718c9594</Item>
                        <Item Key="response_types">code</Item>
                        <Item Key="scope">openid profile</Item>
                        <Item Key="response_mode">form_post</Item>
                        <Item Key="HttpBinding">POST</Item>
                        <Item Key="UsePolicyInRedirectUri">false</Item>
                        <Item Key="DiscoverMetadataByTokenIssuer">true</Item>
                        <!-- The key below allows you to specify each of the Azure AD tenants that can be used to sign in. Update the GUIDs below for each tenant. -->
                        <!-- <Item Key="ValidTokenIssuerPrefixes">https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000,https://login.microsoftonline.com/11111111-1111-1111-1111-111111111111</Item> -->
                        <!-- The commented key below specifies that users from any tenant can sign-in. Uncomment if you would like anyone with an Azure AD account to be able to sign in. -->
                        <Item Key="ValidTokenIssuerPrefixes">https://login.microsoftonline.com/</Item>
                        <Item Key="IncludeClaimResolvingInClaimsHandling">true</Item>
                        <Item Key="ProviderName">Common AAD Endpoint</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="client_secret" StorageReferenceId="B2C_1A_AADAppSecret"/>
                    </CryptographicKeys>
                </TechnicalProfile>

                <TechnicalProfile Id="AADCommon-OIDC-SignIn">
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="sub"/>
                        <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid"/>
                        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name" />
                        <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="family_name" />
                        <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
                        <OutputClaim ClaimTypeReferenceId="email" />
                        <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" AlwaysUseDefaultValue="true" />
                        <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss" DefaultValue="common.onmicrosoft.com" AlwaysUseDefaultValue="true" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName"/>
                        <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName"/>
                        <OutputClaimsTransformation ReferenceId="CreateUserIdentity" />
                        <OutputClaimsTransformation ReferenceId="AppendUserIdentity" />
                    </OutputClaimsTransformations>
                    <IncludeTechnicalProfile ReferenceId="AADCommon-OIDC-Base" />
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialLogin"/>
                </TechnicalProfile>

                <TechnicalProfile Id="AADCommon-OIDC-Link">
                    <DisplayName>Link Your Contoso Account</DisplayName>
                    <Metadata>
                        <Item Key="ClaimTypeOnWhichToEnable">issuers</Item>
                        <Item Key="ClaimValueOnWhichToEnable">common.onmicrosoft.com</Item>
                    </Metadata>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerUserIdToLink" PartnerClaimType="sub" />
                        <OutputClaim ClaimTypeReferenceId="issuerToLink" DefaultValue="common.onmicrosoft.com" AlwaysUseDefaultValue="true" />
                        <OutputClaim ClaimTypeReferenceId="linkOrUnlink" DefaultValue="link" AlwaysUseDefaultValue="true" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateUserIdentityToLink" />
                        <OutputClaimsTransformation ReferenceId="AppendUserIdentityToLink" />
                    </OutputClaimsTransformations>
                    <IncludeTechnicalProfile ReferenceId="AADCommon-OIDC-Base" />
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                    <EnabledForUserJourneys>OnItemAbsenceInStringCollectionClaim</EnabledForUserJourneys>
                </TechnicalProfile>

                <TechnicalProfile Id="AADCommon-Unlink">
                    <DisplayName>Unlink Your Contoso Account</DisplayName>
                    <Metadata>
                        <Item Key="ClaimValueOnWhichToEnable">common.onmicrosoft.com</Item>
                    </Metadata>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerToUnlink" DefaultValue="common.onmicrosoft.com" AlwaysUseDefaultValue="true" />
                        <OutputClaim ClaimTypeReferenceId="linkOrUnlink" DefaultValue="unlink" AlwaysUseDefaultValue="true" />
                    </OutputClaims>
                    <IncludeTechnicalProfile ReferenceId="SocialAccount-Unlink" />
                </TechnicalProfile>


            </TechnicalProfiles>
        </ClaimsProvider>


        <ClaimsProvider>
            <Domain>traineragileways</Domain>
            <DisplayName>Login using AgileWays Trainer</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="AADTrainer-OIDC-Base">
                    <DisplayName>AgileWays Trainer Employee</DisplayName>
                    <Description>Login with your AgileWays Trainer account</Description>
                    <Protocol Name="OpenIdConnect"/>
                    <Metadata>
                        <Item Key="METADATA">https://login.microsoftonline.com/{Settings:TrainerAadTenant}/v2.0/.well-known/openid-configuration</Item>
                        <Item Key="client_id">{Settings:TrainerAadClientId}</Item>
                        <Item Key="response_types">code</Item>
                        <Item Key="scope">openid profile</Item>
                        <Item Key="response_mode">form_post</Item>
                        <Item Key="HttpBinding">POST</Item>
                        <Item Key="UsePolicyInRedirectUri">false</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="client_secret" StorageReferenceId="{Settings:TrainerAadPolicyKeyClientSecret}"/>
                    </CryptographicKeys>
                </TechnicalProfile>
                <TechnicalProfile Id="AADTrainer-OIDC-SignIn">
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="sub"/>
                        <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid"/>
                        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name" />
                        <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="family_name" />
                        <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
                        <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" AlwaysUseDefaultValue="true" />
                        <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss" DefaultValue="agiletrainer.com" AlwaysUseDefaultValue="true" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName"/>
                        <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName"/>
                        <!--
                        <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId"/>
                        <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromAlternativeSecurityId"/>
                        -->
                        <OutputClaimsTransformation ReferenceId="CreateUserIdentity" />
                        <OutputClaimsTransformation ReferenceId="AppendUserIdentity" />
                    </OutputClaimsTransformations>
                    <IncludeTechnicalProfile ReferenceId="AADTrainer-OIDC-Base" />
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialLogin"/>
                </TechnicalProfile>

                <TechnicalProfile Id="AADTrainer-OIDC-Link">
                    <DisplayName>Link Your AgileWays Trainer Account</DisplayName>
                    <Metadata>
                        <Item Key="ClaimTypeOnWhichToEnable">issuers</Item>
                        <Item Key="ClaimValueOnWhichToEnable">agiletrainer.com</Item>
                    </Metadata>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerUserIdToLink" PartnerClaimType="sub" />
                        <OutputClaim ClaimTypeReferenceId="issuerToLink" DefaultValue="agiletrainer.com" AlwaysUseDefaultValue="true" />
                        <OutputClaim ClaimTypeReferenceId="linkOrUnlink" DefaultValue="link" AlwaysUseDefaultValue="true" />
                    </OutputClaims>
                    <OutputClaimsTransformations>
                        <OutputClaimsTransformation ReferenceId="CreateUserIdentityToLink" />
                        <OutputClaimsTransformation ReferenceId="AppendUserIdentityToLink" />
                    </OutputClaimsTransformations>
                    <IncludeTechnicalProfile ReferenceId="AADTrainer-OIDC-Base" />
                    <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
                    <EnabledForUserJourneys>OnItemAbsenceInStringCollectionClaim</EnabledForUserJourneys>
                </TechnicalProfile>

                <TechnicalProfile Id="AADTrainer-Unlink">
                    <DisplayName>Unlink Your AgileWays Trainer Account</DisplayName>
                    <Metadata>
                        <Item Key="ClaimValueOnWhichToEnable">agiletrainer.com</Item>
                    </Metadata>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="issuerToUnlink" DefaultValue="agiletrainer.com" AlwaysUseDefaultValue="true" />
                        <OutputClaim ClaimTypeReferenceId="linkOrUnlink" DefaultValue="unlink" AlwaysUseDefaultValue="true" />
                    </OutputClaims>
                    <IncludeTechnicalProfile ReferenceId="SocialAccount-Unlink" />
                </TechnicalProfile>

            </TechnicalProfiles>
        </ClaimsProvider>

    </ClaimsProviders>
</TrustFrameworkPolicy>